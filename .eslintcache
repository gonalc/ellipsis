[{"/Users/gonzalo/Desktop/tests_jobs/ellipsis-drive/src/App.tsx":"1","/Users/gonzalo/Desktop/tests_jobs/ellipsis-drive/src/index.tsx":"2","/Users/gonzalo/Desktop/tests_jobs/ellipsis-drive/src/reportWebVitals.ts":"3","/Users/gonzalo/Desktop/tests_jobs/ellipsis-drive/src/components/Sidebar/Sidebar.tsx":"4","/Users/gonzalo/Desktop/tests_jobs/ellipsis-drive/src/data.ts":"5","/Users/gonzalo/Desktop/tests_jobs/ellipsis-drive/src/components/Item/Item.tsx":"6","/Users/gonzalo/Desktop/tests_jobs/ellipsis-drive/src/containers/SingleProject/SingleProject.tsx":"7","/Users/gonzalo/Desktop/tests_jobs/ellipsis-drive/src/hooks/screen-size.tsx":"8","/Users/gonzalo/Desktop/tests_jobs/ellipsis-drive/src/containers/SingleProject/SettingsMenu/SettingsMenu.tsx":"9","/Users/gonzalo/Desktop/tests_jobs/ellipsis-drive/src/components/Status/Status.tsx":"10"},{"size":2121,"mtime":1607516999823,"results":"11","hashOfConfig":"12"},{"size":593,"mtime":1607433368197,"results":"13","hashOfConfig":"12"},{"size":425,"mtime":1607427723716,"results":"14","hashOfConfig":"12"},{"size":2321,"mtime":1607516891341,"results":"15","hashOfConfig":"12"},{"size":4686,"mtime":1607513829746,"results":"16","hashOfConfig":"12"},{"size":1884,"mtime":1607518252624,"results":"17","hashOfConfig":"12"},{"size":5242,"mtime":1607518452902,"results":"18","hashOfConfig":"12"},{"size":1264,"mtime":1607516026992,"results":"19","hashOfConfig":"12"},{"size":2372,"mtime":1607520531071,"results":"20","hashOfConfig":"12"},{"size":667,"mtime":1607500056706,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"smeupz",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/gonzalo/Desktop/tests_jobs/ellipsis-drive/src/App.tsx",["45"],"import React, { useEffect, useState } from 'react';\nimport { Redirect, Route, RouteProps, Switch, withRouter } from 'react-router-dom';\nimport './App.scss';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Projects from './containers/Projects/Projects';\nimport SingleProject from './containers/SingleProject/SingleProject';\nimport { db, getProjectById, login } from './data';\nimport { ICustomObject, IUser } from './models';\nimport useScreenSize from './hooks/screen-size';\n\nfunction App({ location }: RouteProps) {\n  const [myself, setMyself] = useState<IUser>();\n  const [projects, setProjects] = useState<ICustomObject[]>([]);\n  const { isMobile } = useScreenSize();\n\n  const getProjects = () => {\n    const { pathname } = location!;\n    let displayProjects: ICustomObject[] = db;\n    if (pathname.indexOf('favorites') >= 0) {\n      // Find the favorite files of the user\n      displayProjects = myself!.favorites.map((p: number): ICustomObject => getProjectById(p));\n    } else if (pathname.indexOf('shared-with-me') >= 0) {\n      // Find the files other users have shared with me\n      displayProjects = myself!.sharedWithMe.map((p: number): ICustomObject => getProjectById(p));\n    // } else if (pathname.indexOf('my-projects') >= 0) {\n    } else {\n      // Find my own projects\n      displayProjects = db.filter((f) => f.owner === myself!.id);\n    }\n    console.log({ displayProjects });\n    setProjects([...displayProjects]);\n  }\n\n  useEffect(() => {\n    const foundUser = login();\n    setMyself(foundUser);\n  }, []);\n\n  useEffect(() => {\n    if (myself) getProjects();\n  }, [location,myself]);\n\n  if (!myself) return <p>Loading...</p>;\n  return (\n    <div className=\"App\">\n      <Sidebar />\n      <div className=\"content\">\n        {isMobile && <h1 className='mobile-title'>Ellipsis</h1>}\n        <Switch>\n          <Route path='/project/:project_id' render={() => <SingleProject />} />\n          <Route path='/projects' render={() => <Projects projects={projects} />} />\n          <Redirect to='projects/my-projects' />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n",["46","47"],"/Users/gonzalo/Desktop/tests_jobs/ellipsis-drive/src/index.tsx",[],"/Users/gonzalo/Desktop/tests_jobs/ellipsis-drive/src/reportWebVitals.ts",[],"/Users/gonzalo/Desktop/tests_jobs/ellipsis-drive/src/components/Sidebar/Sidebar.tsx",[],"/Users/gonzalo/Desktop/tests_jobs/ellipsis-drive/src/data.ts",[],"/Users/gonzalo/Desktop/tests_jobs/ellipsis-drive/src/components/Item/Item.tsx",["48","49","50"],"/Users/gonzalo/Desktop/tests_jobs/ellipsis-drive/src/containers/SingleProject/SingleProject.tsx",["51","52"],"import React, { useEffect, useState, useRef } from 'react';\nimport { faHeart, faMap, faShapes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { RouteChildrenProps, withRouter } from 'react-router-dom';\nimport Status from '../../components/Status/Status';\nimport { db, users } from '../../data';\nimport { ICustomObject, IUser } from '../../models';\nimport './SingleProject.scss';\nimport moment from 'moment';\nimport SettingsMenu from './SettingsMenu/SettingsMenu';\n\nconst SingleProject = ({ match }: RouteChildrenProps) => {\n    const { project_id }: any = match!.params;\n    const myId: number = Number(localStorage.getItem('user_id'));\n    const map = useRef<HTMLDivElement>(null);\n    const [project, setProject] = useState<ICustomObject>();\n    const [coords, setCoords] = useState<[number, number]>([0, 0]); // [X, Y]\n    const [owner, setOwner] = useState<IUser>();\n    const [isFav, setIsFav] = useState<boolean>(false);\n\n    useEffect(() => {\n        if (project_id) {\n            const foundProject = db.find((p) => p.id === Number(project_id));\n            console.log({ foundProject });\n            const foundOwner = users.find((user) => user.id === foundProject!.owner);\n            console.log({ foundOwner });\n            setOwner(foundOwner);\n            setProject(foundProject);\n        }\n    }, []);\n\n    useEffect(() => {\n        // Check if it is in my favs\n        const myFavs = users.find((u) => u.id === myId)?.favorites || [];\n        setIsFav(myFavs.indexOf(Number(project_id)) >= 0);\n    }, []);\n\n    useEffect(() => {\n        if (map!.current && project) {\n            // Get map dimensions\n            const { clientHeight, clientWidth } = map.current;\n            // Set pin location in the map depending on dimensions\n            // Axis 0  is in the middle, so negative coords can be displayed\n            // In a real map, these will be the real coordinates\n            const x = ((clientWidth / 2) * project.position[0] / 100) + (clientWidth / 2);\n            // Height goes in the opposite direction, so the greater numbers are on top\n            const y = ((clientHeight / 2) * -project.position[1] / 100) + (clientHeight / 2);\n            setCoords([x, y]);\n        }\n    }, [map, project]);\n\n    if (!project) return <p>Loading...</p>;\n    return (\n        <div className='SingleProject'>\n            <SettingsMenu />\n            <div className=\"title-container\">\n                <h1>{project.name} <span className=\"vertical-separator\">|</span> <span className=\"project-type light\">{project.type}</span></h1>\n                {isFav && (\n                    <div className=\"fav-container\">\n                        <FontAwesomeIcon icon={faHeart} />\n                    </div>\n                )}\n            </div>\n            <div className=\"status-container\">\n                <Status status={project.status} />\n            </div>\n\n            <div ref={map} className=\"map-container\">\n                <div style={{\n                    left: coords[0],\n                    top: coords[1],\n                }}\n                    className=\"pin-container\"\n                    title={`Position: [${project.position[0]}, ${project.position[1]}]`}\n                >\n                    <FontAwesomeIcon\n                        icon={project.type === 'map' ? faMap : faShapes}\n                        size=\"2x\"\n                    />\n                </div>\n                <img src=\"/img/map.png\" alt=\"Placeholder map of Madrid\" />\n            </div>\n            <div className=\"bottom-container\">\n                <div className=\"creation-container\">\n                    <p className='bold'>Created by:</p>\n                    {owner && (\n                        <div className=\"owner-container\">\n                            <div className=\"avatar\">\n                                <img src={owner.avatar} alt={owner.name} />\n                            </div>\n                            <div className=\"text-container\">\n                                <h3 className='name'>{myId === owner.id ? 'Me' : owner.name}</h3>\n                                <p>\n                                    <span className=\"orange colored\">\n                                        Created at:&nbsp;\n                                </span>\n                                    <span className=\"bold blue-gray colored\">\n                                        {moment(project.creationDate).format('DD/MM/YYYY HH:mm')}\n                                    </span>\n                                </p>\n                                <p>\n                                    <span className=\"orange colored\">\n                                        Last edition:&nbsp;\n                                </span>\n                                    <span className=\"bold blue-gray colored\">\n                                        {moment(project.lastEditDate).format('DD/MM/YYYY HH:mm')}\n                                    </span>\n                                </p>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(SingleProject);","/Users/gonzalo/Desktop/tests_jobs/ellipsis-drive/src/hooks/screen-size.tsx",[],"/Users/gonzalo/Desktop/tests_jobs/ellipsis-drive/src/containers/SingleProject/SettingsMenu/SettingsMenu.tsx",[],"/Users/gonzalo/Desktop/tests_jobs/ellipsis-drive/src/components/Status/Status.tsx",[],{"ruleId":"53","severity":1,"message":"54","line":41,"column":6,"nodeType":"55","endLine":41,"endColumn":23,"suggestions":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":6,"column":10,"nodeType":"63","messageId":"64","endLine":6,"endColumn":17},{"ruleId":"61","severity":1,"message":"65","line":6,"column":19,"nodeType":"63","messageId":"64","endLine":6,"endColumn":34},{"ruleId":"53","severity":1,"message":"66","line":17,"column":8,"nodeType":"55","endLine":17,"endColumn":10,"suggestions":"67"},{"ruleId":"53","severity":1,"message":"68","line":30,"column":8,"nodeType":"55","endLine":30,"endColumn":10,"suggestions":"69"},{"ruleId":"53","severity":1,"message":"70","line":36,"column":8,"nodeType":"55","endLine":36,"endColumn":10,"suggestions":"71"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProjects'. Either include it or remove the dependency array.","ArrayExpression",["72"],"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"@typescript-eslint/no-unused-vars","'faCheck' is defined but never used.","Identifier","unusedVar","'faHourglassHalf' is defined but never used.","React Hook useEffect has a missing dependency: 'project'. Either include it or remove the dependency array.",["75"],"React Hook useEffect has a missing dependency: 'project_id'. Either include it or remove the dependency array.",["76"],"React Hook useEffect has missing dependencies: 'myId' and 'project_id'. Either include them or remove the dependency array.",["77"],{"desc":"78","fix":"79"},"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},"Update the dependencies array to be: [getProjects, location, myself]",{"range":"86","text":"87"},"Update the dependencies array to be: [project]",{"range":"88","text":"89"},"Update the dependencies array to be: [project_id]",{"range":"90","text":"91"},"Update the dependencies array to be: [myId, project_id]",{"range":"92","text":"93"},[1593,1610],"[getProjects, location, myself]",[508,510],"[project]",[1382,1384],"[project_id]",[1587,1589],"[myId, project_id]"]